"""
https://leetcode.com/problems/minimize-malware-spread/
"""


from typing import Counter


class Solution:
    def minMalwareSpread(
            self, graph: list[list[int]], initial: list[int]) -> int:
        def colorNode(currNode: int, currColor: int) -> None:
            colors[currNode] = currColor
            for neighborNode, isConnected in enumerate(graph[currNode]):
                if isConnected and neighborNode not in colors:
                    colorNode(neighborNode, currColor)

        # Color nodes first.
        N, colors, currColor = len(graph), {}, 0
        for node in range(N):
            if node not in colors:
                colorNode(node, currColor)
                currColor += 1

        # Count the size of each color.
        colorCnt = Counter(colors.values())

        # Get unique color node in initial.
        initialCnt = Counter(colors[node] for node in initial)

        # Calculate result.
        maxColor = maxNode = None
        for node in initial:
            color = colors[node]
            if initialCnt[color] == 1:  # Found a unique color.
                if maxNode is None or colorCnt[color] > colorCnt[maxColor] \
                   or (colorCnt[color] == colorCnt[maxColor] and node < maxNode):
                    maxNode, maxColor = node, color

        return maxNode if maxNode is not None else min(initial)
